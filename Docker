
　　　　1.建立虛擬機(AWS-EC2 or GCP-Compute Engine，此次使用AWS-EC2)
    
　　　　(2-1、2-2擇一做)
　　　　2-1.在創建虛擬機時填入UserData下載docker
         #!/bin/bash
         yum update -y
         yum install -y git
         amazon-linux-extras install docker
         yum install docker -y
         service docker start
         systemctl enable docker
         usermod -a -G docker ec2-user
         curl -L "https://github.com/docker/compose/releases/download/1.29.0/docker-compose-$(uname-s)-$(uname -m)" -o /usr/local/bin/docker-composechmod +x /usr/local/bin/docker-compose
         ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose

　　　　2-2-1.創建虛擬機後再mobaXterm填入Public IP address(EC2虛擬機介面勾選虛擬機->Connect)、Specify username、Use private key
         sudo yum update -y：更新yum的套件庫清單 
　　　　　sudo yum install -y git：安裝git
　　　　　sudo amazon-linux-extras install docker -y：用amazon linux的擴展套件安裝docker
　　　　　sudo yum install docker -y：安裝docker
　　　　　sudo service docker start：啟用docker
　　　　　sudo systemctl enable docker：常駐docker
　　　　　sudo usermod -a -G docker ec2-user：新增EC2使用者到docker的群組
　　　　　sudo curl -L　"https://github.com/docker/compose/releases/download/1.29.0/docker-compose-$(uname-s)-$(uname -m)" -o　/usr/local/bin/docker-compose：下載docker-compose
　　　　　　　　　　　　sudo chmod +x /usr/local/bin/docker-compose：更改docker-compose的執行權限
　　　　　　　　　　　　sudo ln -s /usr/local/bin/docker-compose /usr/bin/docker-compose：設定軟連結，讓docker在任何使用者都可以操作
                      
　　　　2-2-2.重開機後Docker version
    
       <<docker-compose>>
       1.下載docker-compose
       2.docker-compose --version
       
       <<映像檔>>
       1.docker images：查看docker映像檔一覽
       2.docker search <映像檔名稱>：找尋指定映像檔，會顯示docker hub的帳號/映像檔，official是否官方，automated是否自動更新
       3.docker pull <映像檔名>：要下載的映像檔，如果沒有指定版本就會下載最新版本
       4.docker rmi <映像檔 ID>：也可用TAG或名稱刪除，刪除指定的映像檔
       
       <<容器>>
       1.docker ps -a：查看docker容器一覽，status Exited容器關閉
       2.docker run -it <容器的映像檔> --name <要取的名字>：建立容器並取名，
                                           -d希望在run容器的時候不要把使用者從EC2->docker->容器，而是留在EC2
                                           -i讓容器的標準輸入保持打開(鍵盤、滑鼠)
                                           -t讓Docker分配一個虛擬終端機（pseudo-tty）並綁定到容器的標準輸入上(螢幕)
                                           變成root不會影響host與虛擬層[root@容器ID /]#
                                           ctrl + p + q 離開
                                           -it可以避免容器被關閉，docker ps -a的status會是Up X minutes
                                           echo $PWD 印出當前的所在路徑
                                           echo $PATH 印出所有的環境變數
                                           echo $USER 印出當前的使用者
                                           -e設定環境變數AAA=BBB，可以透過環境變數，把你設定的密碼帶進去到容器裡面，就不會有密碼公開的危險
                                           -p想要將容器對外開放時，就可以-p host port(虛擬機的port):容器 port
                                           -v想要達到容器刪掉但資料保留，就可以使用資料對應-v host folder(虛擬機 folder):容器 folder即可將路徑內的資料夾的資料去做保留
                                             在本機或虛擬機建立資料夾->創建容器並將本機資料映射到(複製一份)容器內，host或容器內的folder內的資料刪除就會彼此同步
                                             mkdir logs->touch logs/test.txt->ls logs/->-v ./ or $PWD/ logs:logs->
                                             保存到本地端後即使容器刪掉本地端資料也會保留->想要進一步帶到新容器就再開容器時-v
       3.docker exec -it <容器 ID> <要使用的功能 ex.bash>：進入容器並啟用-it功能，使用bash功能
       4.docker rm <容器 ID>：刪除指定的容器，容器如果不需要就直接刪除再創一個新的
                              -f可以讓docker Up中的容器強制被刪除
       5.docker logs <容器 ID>：可查看容器相關紀錄
       
       <<倉庫>>
       1.Docker Hub：可至Docker Hub搜尋需要下載的映像檔並下載

       
                

